version: "3"

tasks:

  set_weights:
    cmds:
      - docker compose --env-file .prod.env -f docker-compose.prod.yml run --entrypoint "python src/cycle/calculate_and_schedule_weights.py" control_node
  control_node_dev:
    cmds:
      - ENV_FILE=.dev.env python -m validator.control_node.src.main
  
  query_node_dev:
    cmds: 
      - ENV_FILE=.dev.env python -m validator.query_node.src.main

  entry_node_dev:
    cmds:
      - uvicorn validator.entry_node.src.server:app --reload --host 0.0.0.0 --port 8091 --env-file .dev.env

  dev_setup:
    cmds:
      - docker compose --env-file .dev.env up -d --scale=control_node=0 --scale=entry_node=0 --scale=query_node=0 --scale=redis-commander=1 --scale=adminer=1

  miners_dev:
    cmds:
      - |
        uvicorn miner.server:app --reload --host 0.0.0.0 --port 4001 --env-file .1.env --log-level debug &
        uvicorn miner.server:app --reload --host 0.0.0.0 --port 4002 --env-file .2.env --log-level debug &
        wait
  
  createm:
    cmds:
      - |
        for env_file in .*.env; do
          if grep -q "NODE_PORT" "$env_file"; then
            node_port=$(grep "NODE_PORT" "$env_file" | cut -d '=' -f2)
            service_name="miner_$(echo $env_file | sed 's/\.//g' | sed 's/env//')"
            pm2 start $service_name 'uvicorn miner.server:app --reload --host 0.0.0.0 --port $node_port --env-file $env_file --log-level debug & '
          fi
        done

  stopm:
    cmds:
      - |
        for service in $(sudo systemctl list-units --type=service --state=active | grep miner_ | awk '{print $1}'); do
          echo "Stopping $service"
          sudo systemctl stop $service
        done

  restartm:
    cmds:
      - |
        for service in $(sudo systemctl list-units --type=service --state=active,failed | grep miner_ | awk '{print $1}'); do
          echo "Restarting $service"
          sudo systemctl restart $service
        done

  statusm:
    cmds:
      - |
        for service in $(sudo systemctl list-units --type=service --all | grep miner_ | grep '\.service' | awk '{print $1}' | grep -v '^‚óè'); do
          echo "Status of $service:"
          sudo systemctl status $service --no-pager
          echo "----------------------"
        done
